/*
Name: Rayton Lin
Teacher: Mr. Noukhovitch
Class: ICS4U1-03
Date: January 5th, 2019
Purpose: This program stores information for a ride sharing app using classes, inheritance, constructors, destructors, functions, exceptions and dynamic memory.
*/
#include <iostream>
using namespace std;

class Ride //Creates a class to represents a ride.
{
public:			//These are public methods.
    Ride() {}; //Constructor for a ride.
    ~Ride() {}; //Destructor for when the ride is finished.
    
private:			//These are private members that can only be accessed by the public methods.
    
}

class Carpool : public Ride
{
private:
    string *destinations;
    rides=new string[maxNumberOfRides+1];
public:
    void addDestination();
    string getDestination(); //Method that gets the destination of the ride. This is changed in the subclasses.
    void changeDestination(); //Method that changes the destination for the ride. This is changed in the subclasses.
}


class SingleCar : public Ride
{
public:
    string getDestination();	//Method that obtains the destination of the ride.
    void getDestination(); //Method that gets the destination of the ride. 
    void changeDestination(); //Method that changes the destination for the ride. 
}

class RideList //Creates a class to represent the list of rides.
{
private:
    int maxNumberOfRides; //Integer that stores the maximum number of rides.
    Ride* rides[]; //Make a table of pointers pointing to rides.
public:
    RideList(); //Constructor for the class.
    ~RideList(); //Destructor for the class.
    void create();
    void delete();
    void reserve();
    void cancel();
}

RideList::RideList()
{
    
}

RideList::~RideList

int main()
{
    RideList rides; //Creates an object of the rides.
    
    
    
    return 0;
}
